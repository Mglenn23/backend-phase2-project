'use strict'

const gitSome = require('./index')

/**
 * path:    Path to the repo
 * tag:     Get the log since the last tag
 * format:  Include only these fields from the log
 * date:    Get the log since this date (only if 'tag' is falsey)
 */
const options = {
  path: './',
  tag: true,
  format: ['%s', '%aN']
  // date: 'Jun.1'
}

const some = gitSome(options)

/**
 * Do you have an unusual naming standard? No problem!
 * Add whatever keywords you think count as a 'minor'
 * or 'patch' version.
 */
const keywords = {
  minor: ['merge', 'feature'],
  patch: ['patch', 'fix', 'refactor', 'tweak', 'update', 'add']
}

const allCommits = some.commits // Every commit captured
const { current, diff, next, commits } = some.version(keywords)

// You could of course use this to write to any file and update its version.
console.log(`Current: ${current}, Diff: ${diff}, Next: ${next}`)
console.log(commits) // The commits which caused the version bump,
