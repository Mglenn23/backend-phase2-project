'use strict'
/* eslint-env mocha */

const { expect } = require('chai')
const command = require('.')

describe('The command module interface', function () {
  it('Is an object', function (done) {
    expect(command).to.be.an.object
    done()
  })
  describe('Command.log(formatters, tag, date)', function () {
    const fn = command.log

    it('Should be a function', function (done) {
      expect(fn).to.be.a.function
      done()
    })

    it('Should take three parameters', function (done) {
      expect(fn.length).to.equal(3)
      done()
    })

    it('Should return an array beginning with "git log"', function (done) {
      const result = fn(['%H', '%s'], 'v1.0.0')
      expect(result).to.be.an.array
      expect(result[0]).to.equal('git')
      expect(result[1]).to.equal('log')
      done()
    })

    it('Should provide a "--since=date" element if both date and tag are provided', function (done) {
      const result = fn(['%h'], 'v1.0.0', 'Jun.1')
      expect(result).to.be.an.array
      expect(result).to.include('--since=Jun.1')
      done()
    })

    it('Should provide a "tag..HEAD" element if date is falsey and tag is provided', function (done) {
      const result = fn(['%h'], 'v1.0.0', undefined)
      expect(result).to.include('v1.0.0..HEAD')
      done()
    })

    it('Should provide neither "tag..HEAD" nor "--since=date" if they are both falsey', function (done) {
      const result = fn(['%h'])
      expect(result).to.include('git')
      expect(result).to.include('log')
      expect(result).to.not.include('v1.0.0..HEAD')
      expect(result).to.not.include('--since=Jun.1')
      done()
    })

    it('Should always provide the "--pretty=format:" element', function (done) {
      const result = fn(['%h'], 'v1.0.0', 'Jun.1')
      expect(result[result.length - 1]).to.have.string('--pretty=format:')
      done()
    })
  })
  describe('Command.latestTag()', function () {
    const fn = command.latestTag

    it('Should be a function', function (done) {
      expect(fn).to.be.a.function
      done()
    })
    it('Should take no params', function (done) {
      expect(fn.length).to.equal(0)
      done()
    })
    it('Should return an array with "git", "describe", "--tags" and "--abbrev=0"', function (done) {
      expect(fn()).to.include('git')
      expect(fn()).to.include('describe')
      expect(fn()).to.include('--tags')
      expect(fn()).to.include('--abbrev=0')
      done()
    })
  })
})
